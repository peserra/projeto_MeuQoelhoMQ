# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import simple_pb2 as simple__pb2

GRPC_GENERATED_VERSION = '1.65.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in simple_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class MessageManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateChannel = channel.unary_unary(
                '/teste_grpc.MessageManager/CreateChannel',
                request_serializer=simple__pb2.noParam.SerializeToString,
                response_deserializer=simple__pb2.CreateChannelResponse.FromString,
                _registered_method=True)
        self.RemoveChannel = channel.unary_unary(
                '/teste_grpc.MessageManager/RemoveChannel',
                request_serializer=simple__pb2.RemoveChannelRequest.SerializeToString,
                response_deserializer=simple__pb2.RemoveChannelResponse.FromString,
                _registered_method=True)
        self.ListChannels = channel.unary_unary(
                '/teste_grpc.MessageManager/ListChannels',
                request_serializer=simple__pb2.ListChannelsRequest.SerializeToString,
                response_deserializer=simple__pb2.ListChannelsResponse.FromString,
                _registered_method=True)
        self.PublishMessage = channel.unary_unary(
                '/teste_grpc.MessageManager/PublishMessage',
                request_serializer=simple__pb2.PublishMessageRequest.SerializeToString,
                response_deserializer=simple__pb2.PublishMessageResponse.FromString,
                _registered_method=True)
        self.SubscribeChannel = channel.unary_stream(
                '/teste_grpc.MessageManager/SubscribeChannel',
                request_serializer=simple__pb2.SubscribeChannelRequest.SerializeToString,
                response_deserializer=simple__pb2.Message.FromString,
                _registered_method=True)
        self.ReceiveMessage = channel.unary_unary(
                '/teste_grpc.MessageManager/ReceiveMessage',
                request_serializer=simple__pb2.ReceiveMessageRequest.SerializeToString,
                response_deserializer=simple__pb2.Message.FromString,
                _registered_method=True)
        self.Ping = channel.unary_unary(
                '/teste_grpc.MessageManager/Ping',
                request_serializer=simple__pb2.noParam.SerializeToString,
                response_deserializer=simple__pb2.noParam.FromString,
                _registered_method=True)


class MessageManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannel,
                    request_deserializer=simple__pb2.noParam.FromString,
                    response_serializer=simple__pb2.CreateChannelResponse.SerializeToString,
            ),
            'RemoveChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveChannel,
                    request_deserializer=simple__pb2.RemoveChannelRequest.FromString,
                    response_serializer=simple__pb2.RemoveChannelResponse.SerializeToString,
            ),
            'ListChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChannels,
                    request_deserializer=simple__pb2.ListChannelsRequest.FromString,
                    response_serializer=simple__pb2.ListChannelsResponse.SerializeToString,
            ),
            'PublishMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishMessage,
                    request_deserializer=simple__pb2.PublishMessageRequest.FromString,
                    response_serializer=simple__pb2.PublishMessageResponse.SerializeToString,
            ),
            'SubscribeChannel': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeChannel,
                    request_deserializer=simple__pb2.SubscribeChannelRequest.FromString,
                    response_serializer=simple__pb2.Message.SerializeToString,
            ),
            'ReceiveMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveMessage,
                    request_deserializer=simple__pb2.ReceiveMessageRequest.FromString,
                    response_serializer=simple__pb2.Message.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=simple__pb2.noParam.FromString,
                    response_serializer=simple__pb2.noParam.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'teste_grpc.MessageManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('teste_grpc.MessageManager', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MessageManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/CreateChannel',
            simple__pb2.noParam.SerializeToString,
            simple__pb2.CreateChannelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/RemoveChannel',
            simple__pb2.RemoveChannelRequest.SerializeToString,
            simple__pb2.RemoveChannelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/ListChannels',
            simple__pb2.ListChannelsRequest.SerializeToString,
            simple__pb2.ListChannelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PublishMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/PublishMessage',
            simple__pb2.PublishMessageRequest.SerializeToString,
            simple__pb2.PublishMessageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubscribeChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/teste_grpc.MessageManager/SubscribeChannel',
            simple__pb2.SubscribeChannelRequest.SerializeToString,
            simple__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/ReceiveMessage',
            simple__pb2.ReceiveMessageRequest.SerializeToString,
            simple__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/teste_grpc.MessageManager/Ping',
            simple__pb2.noParam.SerializeToString,
            simple__pb2.noParam.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
